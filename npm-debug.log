0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/gileze33/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
12 verbose folder .
13 info prepublish rabbitr@0.0.11
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/gileze33/.npm/1f1177db-tar.lock
16 silly lockFile 85322427-91955-0-5743392696604133-tmp-tgz tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
17 verbose lock tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz /Users/gileze33/.npm/85322427-91955-0-5743392696604133-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 85322427-91955-0-5743392696604133-tmp-tgz tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
21 silly lockFile 85322427-91955-0-5743392696604133-tmp-tgz tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
22 verbose tar unpack /var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
23 silly lockFile 2b89c55b-eze33-npm-rabbitr-0-0-11-package tar:///Users/gileze33/.npm/rabbitr/0.0.11/package
24 verbose lock tar:///Users/gileze33/.npm/rabbitr/0.0.11/package /Users/gileze33/.npm/2b89c55b-eze33-npm-rabbitr-0-0-11-package.lock
25 silly lockFile 85322427-91955-0-5743392696604133-tmp-tgz tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
26 verbose lock tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz /Users/gileze33/.npm/85322427-91955-0-5743392696604133-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry lib/rabbitr.js
32 silly gunzTarPerm extractEntry test/bindExchangeToQueue.js
33 silly gunzTarPerm extractEntry test/connect.js
34 silly gunzTarPerm extractEntry test/index.js
35 silly gunzTarPerm extractEntry test/reconnect.js
36 silly gunzTarPerm extractEntry test/clearTimer.js
37 silly gunzTarPerm extractEntry test/rpcListener.js
38 silly gunzTarPerm extractEntry test/send.js
39 silly gunzTarPerm extractEntry test/setTimer.js
40 silly gunzTarPerm extractEntry test/setup.js
41 silly gunzTarPerm extractEntry test/subscribe.js
42 silly gunzTarPerm extractEntry test/rpcExec.js
43 silly lockFile 2b89c55b-eze33-npm-rabbitr-0-0-11-package tar:///Users/gileze33/.npm/rabbitr/0.0.11/package
44 silly lockFile 2b89c55b-eze33-npm-rabbitr-0-0-11-package tar:///Users/gileze33/.npm/rabbitr/0.0.11/package
45 silly lockFile 85322427-91955-0-5743392696604133-tmp-tgz tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
46 silly lockFile 85322427-91955-0-5743392696604133-tmp-tgz tar:///var/folders/8v/lzscjjnj2g58hr1l301j51180000gn/T/npm-33490-F5bJ_Ps6/1409606991955-0.5743392696604133/tmp.tgz
47 silly lockFile 3a52ce78- .
48 silly lockFile 3a52ce78- .
49 silly publish { name: 'rabbitr',
49 silly publish   version: '0.0.11',
49 silly publish   description: 'RabbitMQ made easy for nodejs',
49 silly publish   main: 'lib/rabbitr.js',
49 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
49 silly publish   repository: { type: 'git', url: 'https://github.com/gileze33/node-rabbitr' },
49 silly publish   author: { name: 'Giles Williams' },
49 silly publish   license: 'ISC',
49 silly publish   dependencies:
49 silly publish    { amqp: '^0.2.0',
49 silly publish      colors: '^0.6.2',
49 silly publish      debug: '^1.0.4',
49 silly publish      shortid: '^2.0.1' },
49 silly publish   readme: 'node-rabbitr\n====\n\nRabbitMQ made easy for nodejs\n\nInit / setup\n----\n\n    var rabbit = new Rabbitr({\n        host: \'localhost\',\n        queuePrefix: null // prefixed to every queue and exchange name\n    });\n\n\nBasic queue usage\n----\n\n    // in one module\n    rabbit.subscribe(\'sms.send.booking.create\');\n    rabbit.bindExchangeToQueue(\'booking.create\', \'sms.send.booking.create\');\n    rabbit.on(\'sms.send.booking.create\', function(message) {\n        // send an sms\n  \n        message.ack();\n    });\n    \n    // in another module\n    rabbit.subscribe(\'email.send.booking.create\');\n    rabbit.bindExchangeToQueue(\'booking.create\', \'email.send.booking.create\');\n    rabbit.on(\'email.send.booking.create\', function(message) {\n        // send an email\n  \n        message.ack();\n    });\n    \n    // elsewhere\n    rabbit.send(\'booking.create\', {id: 1});\n    \n\nTimers\n----\nRabbitr makes using dead letter exchanges dead easy\n\n    // set timer\n    rabbit.subscribe(\'booking.not-confirmed.timer.set\');\n    rabbit.bindExchangeToQueue(\'booking.create\', \'booking.not-confirmed.timer.set\');\n    rabbit.on(\'booking.not-confirmed.timer.set\', function(message) {\n        // do something to calculate how long we want the timer to last\n    \t\t\n\t\tvar timeFromNow = 900000; // 15 mins\n\t\t\n\t\trabbit.setTimer(\'booking.not-confirmed.timer.fire\', message.data.id, {\n    \t\tid: message.data.id\n\t\t}, timeFromNow);\n\t\t\n\t\tmessage.ack();\n    });\n    \n    // clear timer if something has happened that means the timer action isn\'t required\n    rabbit.subscribe(\'booking.not-confirmed.timer.clear\');\n    rabbit.bindExchangeToQueue(\'booking.confirm\', \'booking.not-confirmed.timer.clear\');\n    rabbit.on(\'booking.not-confirmed.timer.clear\', function(message) {\n        rabbit.clearTimer(\'booking.not-confirmed.timer.fire\', message.data.id);\n        \n        message.ack();\n    });\n    \n    // handle the timer firing\n    rabbit.subscribe(\'booking.not-confirmed.timer.fire\');\n    rabbit.bindExchangeToQueue(\'booking.not-confirmed.timer.fire\', \'booking.not-confirmed.timer.fire\');\n    rabbit.on(\'booking.not-confirmed.timer.fire\', function(message) {\n        // do something off the back of the timer firing\n        // in this example, message.data.id is the booking id that wasn\'t confirmed in time\n        \n        message.ack();\n    });\n    \n\nRPC (remote procedure call)\n----\nUse Rabbitr\'s RPC methods if you need to do something and get a response back, and you want to decouple the two processes via MQ\n\n> Make sure you use the same version of Rabbitr on both the worker and scheduler sides!\n\n-\n\n> Note that we call message.queue.shift() rather than message.ack() to confirm processing for RPC methods - this is as Rabbitr\'s rpcListener method is set up so you can process in series, or immediately ask for another message to process in (kind of) parallel\n\n###Define the worker\'s method (series)\n    \n    rabbit.rpcListener(\'intelli-travel.directions\', function(message, cb) {\n        // do something with message.data\n        \n        cb(null, {\n            rpc: \'is cool\'\n        });\n    });\n    \n###Define the worker\'s method (parallel, kind of)\n    \n    rabbit.rpcListener(\'intelli-travel.directions\', function(message, cb) {\n        message.queue.shift(); // immediately moves on to processing the next \n        // do something with message.data\n        \n        cb(null, {\n            rpc: \'is cool\'\n        });\n        \n        message.queue.shift(); \n    });\n\n###Calling the worker\'s RPC\n\n    rabbit.rpcExec(\'intelli-travel.directions\', { some: \'data\' }, function(err, message) {\n        // do something with message.data\n        // message.data will look like { rpc: \'is cool\' }\n    });',
49 silly publish   readmeFilename: 'README.md',
49 silly publish   bugs: { url: 'https://github.com/gileze33/node-rabbitr/issues' },
49 silly publish   homepage: 'https://github.com/gileze33/node-rabbitr',
49 silly publish   _id: 'rabbitr@0.0.11',
49 silly publish   _shasum: '4fe6eb1a287a5dd1c355a9e3097b5ac9d3560144',
49 silly publish   _from: '.' }
50 verbose url raw rabbitr
51 verbose url resolving [ 'https://registry.npmjs.org/', './rabbitr' ]
52 verbose url resolved https://registry.npmjs.org/rabbitr
53 info trying registry request attempt 1 at 22:29:52
54 http PUT https://registry.npmjs.org/rabbitr
55 http 403 https://registry.npmjs.org/rabbitr
56 verbose headers { date: 'Mon, 01 Sep 2014 21:29:55 GMT',
56 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
56 verbose headers   'content-type': 'application/json',
56 verbose headers   'cache-control': 'max-age=60',
56 verbose headers   'content-length': '6590',
56 verbose headers   'accept-ranges': 'bytes',
56 verbose headers   via: '1.1 varnish',
56 verbose headers   'x-served-by': 'cache-lcy1130-LCY',
56 verbose headers   'x-cache': 'MISS',
56 verbose headers   'x-cache-hits': '0',
56 verbose headers   'x-timer': 'S1409606994.725517,VS0,VE605',
56 verbose headers   'keep-alive': 'timeout=10, max=50',
56 verbose headers   connection: 'Keep-Alive' }
57 error publish Failed PUT 403
58 error Error: forbidden cannot modify pre-existing version: 0.0.11
58 error old={"name":"rabbitr","version":"0.0.11","description":"RabbitMQ made easy for nodejs","main":"lib/rabbitr.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/gileze33/node-rabbitr"},"author":{"name":"Giles Williams"},"license":"ISC","dependencies":{"amqp":"^0.2.0","colors":"^0.6.2","debug":"^1.0.4","shortid":"^2.0.1"},"bugs":{"url":"https://github.com/gileze33/node-rabbitr/issues"},"homepage":"https://github.com/gileze33/node-rabbitr","_id":"rabbitr@0.0.11","_shasum":"b040901c4e9a090a5da28630a3291214dbd87984","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"gileze33","email":"giles.williams@gmail.com"},"maintainers":[{"name":"gileze33","email":"giles.williams@gmail.com"}],"dist":{"shasum":"b040901c4e9a090a5da28630a3291214dbd87984","tarball":"http://registry.npmjs.org/rabbitr/-/rabbitr-0.0.11.tgz"}}
58 error new={"name":"rabbitr","version":"0.0.11","description":"RabbitMQ made easy for nodejs","main":"lib/rabbitr.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://github.com/gileze33/node-rabbitr"},"author":{"name":"Giles Williams"},"license":"ISC","dependencies":{"amqp":"^0.2.0","colors":"^0.6.2","debug":"^1.0.4","shortid":"^2.0.1"},"readme":"node-rabbitr\u000a====\u000a\u000aRabbitMQ made easy for nodejs\u000a\u000aInit / setup\u000a----\u000a\u000a    var rabbit = new Rabbitr({\u000a        host: 'localhost',\u000a        queuePrefix: null // prefixed to every queue and exchange name\u000a    });\u000a\u000a\u000aBasic queue usage\u000a----\u000a\u000a    // in one module\u000a    rabbit.subscribe('sms.send.booking.create');\u000a    rabbit.bindExchangeToQueue('booking.create', 'sms.send.booking.create');\u000a    rabbit.on('sms.send.booking.create', function(message) {\u000a        // send an sms\u000a  \u000a        message.ack();\u000a    });\u000a    \u000a    // in another module\u000a    rabbit.subscribe('email.send.booking.create');\u000a    rabbit.bindExchangeToQueue('booking.create', 'email.send.booking.create');\u000a    rabbit.on('email.send.booking.create', function(message) {\u000a        // send an email\u000a  \u000a        message.ack();\u000a    });\u000a    \u000a    // elsewhere\u000a    rabbit.send('booking.create', {id: 1});\u000a    \u000a\u000aTimers\u000a----\u000aRabbitr makes using dead letter exchanges dead easy\u000a\u000a    // set timer\u000a    rabbit.subscribe('booking.not-confirmed.timer.set');\u000a    rabbit.bindExchangeToQueue('booking.create', 'booking.not-confirmed.timer.set');\u000a    rabbit.on('booking.not-confirmed.timer.set', function(message) {\u000a        // do something to calculate how long we want the timer to last\u000a    \u0009\u0009\u000a\u0009\u0009var timeFromNow = 900000; // 15 mins\u000a\u0009\u0009\u000a\u0009\u0009rabbit.setTimer('booking.not-confirmed.timer.fire', message.data.id, {\u000a    \u0009\u0009id: message.data.id\u000a\u0009\u0009}, timeFromNow);\u000a\u0009\u0009\u000a\u0009\u0009message.ack();\u000a    });\u000a    \u000a    // clear timer if something has happened that means the timer action isn't required\u000a    rabbit.subscribe('booking.not-confirmed.timer.clear');\u000a    rabbit.bindExchangeToQueue('booking.confirm', 'booking.not-confirmed.timer.clear');\u000a    rabbit.on('booking.not-confirmed.timer.clear', function(message) {\u000a        rabbit.clearTimer('booking.not-confirmed.timer.fire', message.data.id);\u000a        \u000a        message.ack();\u000a    });\u000a    \u000a    // handle the timer firing\u000a    rabbit.subscribe('booking.not-confirmed.timer.fire');\u000a    rabbit.bindExchangeToQueue('booking.not-confirmed.timer.fire', 'booking.not-confirmed.timer.fire');\u000a    rabbit.on('booking.not-confirmed.timer.fire', function(message) {\u000a        // do something off the back of the timer firing\u000a        // in this example, message.data.id is the booking id that wasn't confirmed in time\u000a        \u000a        message.ack();\u000a    });\u000a    \u000a\u000aRPC (remote procedure call)\u000a----\u000aUse Rabbitr's RPC methods if you need to do something and get a response back, and you want to decouple the two processes via MQ\u000a\u000a> Make sure you use the same version of Rabbitr on both the worker and scheduler sides!\u000a\u000a-\u000a\u000a> Note that we call message.queue.shift() rather than message.ack() to confirm processing for RPC methods - this is as Rabbitr's rpcListener method is set up so you can process in series, or immediately ask for another message to process in (kind of) parallel\u000a\u000a###Define the worker's method (series)\u000a    \u000a    rabbit.rpcListener('intelli-travel.directions', function(message, cb) {\u000a        // do something with message.data\u000a        \u000a        cb(null, {\u000a            rpc: 'is cool'\u000a        });\u000a    });\u000a    \u000a###Define the worker's method (parallel, kind of)\u000a    \u000a    rabbit.rpcListener('intelli-travel.directions', function(message, cb) {\u000a        message.queue.shift(); // immediately moves on to processing the next \u000a        // do something with message.data\u000a        \u000a        cb(null, {\u000a            rpc: 'is cool'\u000a        });\u000a        \u000a        message.queue.shift(); \u000a    });\u000a\u000a###Calling the worker's RPC\u000a\u000a    rabbit.rpcExec('intelli-travel.directions', { some: 'data' }, function(err, message) {\u000a        // do something with message.data\u000a        // message.data will look like { rpc: 'is cool' }\u000a    });","readmeFilename":"README.md","bugs":{"url":"https://github.com/gileze33/node-rabbitr/issues"},"homepage":"https://github.com/gileze33/node-rabbitr","_id":"rabbitr@0.0.11","_shasum":"4fe6eb1a287a5dd1c355a9e3097b5ac9d3560144","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"gileze33","email":"giles.williams@gmail.com"},"maintainers":[{"name":"gileze33","email":"giles.williams@gmail.com"}],"dist":{"shasum":"4fe6eb1a287a5dd1c355a9e3097b5ac9d3560144","tarball":"http://registry.npmjs.org/rabbitr/-/rabbitr-0.0.11.tgz"}}: rabbitr
58 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:273:14)
58 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:211:65)
58 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
58 error     at Request.EventEmitter.emit (events.js:98:17)
58 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
58 error     at Request.EventEmitter.emit (events.js:117:20)
58 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
58 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
58 error     at _stream_readable.js:919:16
58 error     at process._tickCallback (node.js:419:13)
59 error If you need help, you may report this *entire* log,
59 error including the npm and node versions, at:
59 error     <http://github.com/npm/npm/issues>
60 error System Darwin 13.2.0
61 error command "node" "/usr/local/bin/npm" "publish"
62 error cwd /Users/gileze33/Dropbox/rabbitr
63 error node -v v0.10.28
64 error npm -v 1.4.9
65 verbose exit [ 1, true ]
